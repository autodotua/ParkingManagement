@page
@model Park.Admin.Pages.CarAndOwner.ParkingSpaceListModel
@{
    ViewData["Title"] = "听策划为管理";
    var PagingInfo = Model.PagingInfo;
}
@using System.Diagnostics
@section body {
    <style>
        .action-btn {
            margin-right: 12px;
        }
    </style>
    <input type="hidden" id="urls" data-postback="@Url.Handler("DoPostBack")" />
    <f:Panel ID="Panel1" BodyPadding="5" ShowBorder="false" Layout="VBox" ShowHeader="false" Title="用户管理" IsViewPort="true">
        <Items>
            <f:Grid ID="Grid1" BoxFlex="1" ShowBorder="true" ShowHeader="false" EnableCheckBoxSelect="true" DataIDField="ID" DataTextField="Username" AllowSorting="true"
                    AllowPaging="true" IsDatabasePaging="true" AllowCellEditing="true"
                    SortField="@PagingInfo.SortField" SortDirection="@PagingInfo.SortDirection"
                    PageSize="@PagingInfo.PageSize" RecordCount="@PagingInfo.RecordCount" DataSource="@Model.ParkingSpaces"
                    OnSort="@Url.Handler("DoPostBack")" OnSortFields="Panel1"
                    OnPageIndexChanged="@Url.Handler("DoPostBack")" OnPageIndexChangedFields="Panel1">
                <Columns>
                    <f:RowNumberField EnablePagingNumber="true"></f:RowNumberField>
                    <f:RenderCheckField For="ParkingSpaces.First().HasCar" RenderAsStaticField="true" Width="80" />
                    <f:RenderField For="ParkingSpaces.First().SensorToken" SortField="DeviceToken" Width="100">
                        <Editor>
                            <f:TextBox ID="tbxDeviceToken" Required="true"></f:TextBox>
                        </Editor>
                    </f:RenderField>

                    <f:RenderField EnableColumnHide="false" EnableHeaderMenu="false" Width="240" RendererFunction="renderBtns"></f:RenderField>

                </Columns>
                <PageItems>
                    <f:ToolbarSeparator></f:ToolbarSeparator>
                    <f:ToolbarText Text="每页记录数："></f:ToolbarText>
                    <f:DropDownList ID="ddlGridPageSize" Width="80" SelectedValue="@PagingInfo.PageSize.ToString()"
                                    OnSelectedIndexChanged="@Url.Handler("DoPostBack")" OnSelectedIndexChangedParameter1="@(new Parameter("actionType","changeGridPageSize",ParameterMode.String))" OnSelectedIndexChangedFields="Panel1">
                        <Items>
                            <f:ListItem Text="10" Value="10"></f:ListItem>
                            <f:ListItem Text="20" Value="20"></f:ListItem>
                            <f:ListItem Text="50" Value="50"></f:ListItem>
                            <f:ListItem Text="100" Value="100"></f:ListItem>
                        </Items>
                    </f:DropDownList>
                </PageItems>
                <Toolbars>
                    <f:Toolbar ID="Toolbar1" Position="Top">
                        <Items>

                            <f:TwinTriggerBox ID="ttbSearchMessage" ShowLabel="false" EmptyText="搜索" Trigger1Icon="Clear" Trigger2Icon="Search"
                                              ShowTrigger1="false" OnTrigger2Click="@Url.Handler("DoPostBack")" OnTrigger2ClickParameter1="@(new Parameter("actionType","trigger2",ParameterMode.String))" OnTrigger2ClickFields="Panel1"
                                              OnTrigger1Click="@Url.Handler("DoPostBack")" OnTrigger1ClickParameter1="@(new Parameter("actionType","trigger1",ParameterMode.String))" OnTrigger1ClickFields="Panel1">
                            </f:TwinTriggerBox>
                            <f:ToolbarFill></f:ToolbarFill>
                            <f:Button ID="btnDeletedSelected" Icon="Delete" Text="删除选中记录" AttributeDataTag="@Url.Handler("DoPostBack")" data-url="@Url.Handler("DoPostBack")">
                                <Listeners>
                                    <f:Listener Event="click" Handler="onDeleteSelectedClick"></f:Listener>
                                </Listeners>
                            </f:Button>
                            @*<f:Button ID="btnNew" Icon="Add" Text="新增用户">
                                <Listeners>
                                    <f:Listener Event="click" Handler="onNewClick"></f:Listener>
                                </Listeners>
                            </f:Button>*@
                            <f:Button ID="btnSubmit" Text="保存数据" OnClick="@Url.Handler("SaveData")" OnClickFields="Grid1"></f:Button>

                        </Items>
                    </f:Toolbar>
                </Toolbars>
            </f:Grid>
        </Items>
    </f:Panel>

    @*<f:Window ID="Window1" IsModal="true" Hidden="true" Target="Top" EnableResize="true"
                  EnableMaximize="true" EnableIFrame="true" Width="900" Height="600"
                  OnClose="@Url.Handler("UserList_DoPostBack")" OnCloseFields="Panel1">
        </f:Window>*@
}

@section script{
    <script src="~/res/js/grid.js"></script>
    <script>



    function onNewClick(event) {
        //F.ui.Window1.show('@Url.Content("~/Admin/UserNew")', '新增');
    }
        function renderCars(value, params) {
            return renderButtons([{ class: "car", text: value+" 辆" }]);
        } function renderTransactions(value, params) {

            return renderButtons([{ class: "tra", text: value + " 笔" }]);
    }
        function renderBtns(value, params) {
            return renderButtons([{ class: "delete", text: "删除" }]);
    }


        function otherActionButtonActions(cnode, rowData) {
                if (cnode.hasClass('password')) {
                    F.confirm({
                        message: '是否重置密码？',
                        target: '_top',
                        ok: function () {
                            // 触发后台事件
                            F.doPostBack('@Url.Handler("DoPostBack")', 'Panel1', {
                                actionType: 'pswd',
                                deletedRowIDs: [rowData.id]
                            });
                        }
                    });
            }
          else  if (cnode.hasClass('car')) {
                parent.addExampleTab({
                    id: 'car_withOwner',
                    iframeUrl: '@Url.Content("~/CarAndOwner/CarList")?carOwnerID=' + rowData.id,
                    title: '车辆管理 - ' + rowData.text,
                    refreshWhenExist: true
                });
                } else if (cnode.hasClass('tra')) {
                parent.addExampleTab({
                    id: 'transactionRecord_withOwner',
                    iframeUrl: '@Url.Content("~/CarAndOwner/TransactionRecordList")?carOwnerID=' + rowData.id,
                    title: '交易记录 - ' + rowData.text,
                    refreshWhenExist: true
                });
            }
        }

    </script>
}
